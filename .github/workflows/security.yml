name: Security Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-checks:
    runs-on: ubuntu-latest

    env:
      DEPTRACK_API_URL: ${{ secrets.DEPTRACK_API_URL }}
      DEPTRACK_API_KEY: ${{ secrets.DEPTRACK_API_KEY }}
      DEPTRACK_PROJECT_NAME: ${{ secrets.DEPTRACK_PROJECT_NAME }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run Semgrep (SAST)
      run: docker run --rm -v "${{ github.workspace }}:/src" returntocorp/semgrep:latest semgrep ci --config auto --json > semgrep-report.json || true

    - name: Upload Semgrep report artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: semgrep-report
        path: semgrep-report.json

    - name: Generate SBOM with Syft
      continue-on-error: true
      uses: anchore/sbom-action@v0.14.3
      with:
        format: cyclonedx-json
        output-file: sbom.json
        upload-artifact: false

    - name: Debug Dependency Track variables
      run: |
        echo "DEPTRACK_API_URL=${DEPTRACK_API_URL}"
        echo "DEPTRACK_API_KEY=${DEPTRACK_API_KEY}"
        echo "DEPTRACK_PROJECT_NAME=${DEPTRACK_PROJECT_NAME}"
      env:
        DEPTRACK_API_URL: ${{ secrets.DEPTRACK_API_URL }}
        DEPTRACK_API_KEY: ${{ secrets.DEPTRACK_API_KEY }}
        DEPTRACK_PROJECT_NAME: ${{ secrets.DEPTRACK_PROJECT_NAME }}

    - name: Upload SBOM to Dependency Track
      continue-on-error: true
      run: |
        curl -k -X PUT "${DEPTRACK_API_URL}/api/v1/bom" \
          -H "X-Api-Key: ${DEPTRACK_API_KEY}" \
          -F "projectName=${DEPTRACK_PROJECT_NAME}" \
          -F "autoCreate=true" \
          -F "bom=@sbom.json"

    - name: Build Docker image
      continue-on-error: true
      run: docker build -t nms:2.6.4 .

    - name: Scan Docker image with Trivy
      continue-on-error: true
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: nms:2.6.4
        format: cyclonedx
        output: trivy-sbom.json

    - name: Upload Trivy SBOM to Dependency Track
      continue-on-error: true
      run: |
        curl -k -X PUT "${DEPTRACK_API_URL}/api/v1/bom" \
          -H "X-Api-Key: ${DEPTRACK_API_KEY}" \
          -F "projectName=${DEPTRACK_PROJECT_NAME}" \
          -F "autoCreate=true" \
          -F "bom=@trivy-sbom.json"


# ZAP scan moved to a separate job below

zap-scan:
  runs-on: ubuntu-latest

  steps:
  - name: Checkout repository
    uses: actions/checkout@v3

  - name: Run ZAP Baseline Scan via Docker as root
    run: |
      set +e
      docker run --rm \
        --user root \
        -v ${{ github.workspace }}:/zap/wrk \
        ghcr.io/zaproxy/zaproxy:stable \
        /zap/zap-baseline.py \
        -t https://crpn.ru:8084 \
        -r zap-report.html \
        -w zap-warnings.txt \
        -g zap-report.md \
        -J zap-report.json \
        -a -d
      echo "ZAP scan finished with exit code $?"
    continue-on-error: true

  - name: Upload ZAP HTML report
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: zap-html-report
      path: zap-report.html

  - name: Upload ZAP Markdown report
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: zap-md-report
      path: zap-report.md

  - name: Upload ZAP JSON report
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: zap-json-report
      path: zap-report.json

  - name: Upload ZAP warnings
    if: always()
    uses: actions/upload-artifact@v4
    with:
      name: zap-warnings
      path: zap-warnings.txt
